<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAMAAABrrFhUAAAABGdBTUEAALGPC/xhBQAAAwBQTFRFQ0ND
        f39/xEUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKi91gAAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAABZ0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMDvo9WkAAAT2SURBVHhe7ZbBrtww
        DAPb9/8f3XhBCXbk9CCwWyrWnEzOQuAp2F9N05zN779wgpcfiOcWhpcfiOcWhpcfiOcWhv/184D9ADHw
        Fi8/EDHA8vIDEQMsLz8QMcDy8gMRAywvPxAxwPLyAxEDLC8/EDHA8k3THM74GBj3fOeNfikyB2Yq+qXI
        HJip6Jcic2Cmovc/Cp9wgRh4q/cie8Co6r3IHjCqei+yB4yq3ovsAaOq9yJ7wKjqvcgeMKp6L7IHjKp+
        dE3THMz4ODxxgpcfiOcWhpcfiOcWhpcfiOcWhpf7Y2J8y8sPRAywvPxAxADLyw9EDLC8/EDEAMvLD0QM
        sLz8QMQAy8sPRAywfNM0hzM+BsY933mjX4rMgZmKfikyB2Yq+qXIHJip6P2PwidcIAbe6r3IHjCqei+y
        B4yq3ovsAaOq9yJ7wKjqvcgeMKp6L7IHjKrei+wBo6ofXdM0BzM+Dk+c4OUH4rmF4eUH4rmF4eUH4rmF
        4eX+mBjf8vIDEQMsLz8QMcDy8gMRAywvPxAxwPLyAxEDLC8/EDHA8vIDEQMs3zTN4YyPgXHPd97olyJz
        YKaiX4rMgZmKfikyB2Yqev+j8AkXiIG3ei+yB4yq3ovsAaOq9yJ7wKjqvcgeMKp6L7IHjKrei+wBo6r3
        InvAqOpH1zTNwYyPwxMnePmBeG5hePmBeG5hePmBeG5heLk/Jsa3vPxAxADLyw9EDLC8/EDEAMvLD0QM
        sLz8QMQAy8sPRAywvPxAxADLN01zOONjYNzznTf6pcgcmKnolyJzYKaiX4rMgZmK3v8ofMIFYuCt3ovs
        AaOq9yJ7wKjqvcgeMKp6L7IHjKrei+wBo6r3InvAqOq9uLzkQONf+dE1TXMw4+PwxAlefiCeWxhefiCe
        WxhefiCeWxhe7o+J8S0vPxAxwPLyAxEDLC8/EDHA8vIDEQMsLz8QMcDy8gMRAywvPxAxwPJN0xzO+BgY
        93znjX4pMgdmKvqlyByYqeiXInNgpqL3PwqfcIEYeKv3InvAqOq9yB4wqnovsgeMqt6L7AGjqvcie8Co
        6r3IHjCqei+yB4yqfnRN0xzM+Dg8cYKXH4jnFoaXH4jnFoaXH4jnFoaX+2NifMvLD0QMsLz8QMQAy8sP
        RAywvPxAxADLyw9EDLC8/EDEAMvLD0QMsHzTNIczPgbGPd95o1+KzIGZin4pMgdmKvqlyByYqej9j8In
        XCAG3uq9yB4wqnovsgeMqt6L7AGjqvcie8Co6r3IHjCqei+yB4yq3ovsAaOqH13TNAczPg5PnODlB+K5
        heHlB+K5heHlB+K5heHl/pgY3/LyAxEDLC8/EDHA8vIDEQMsLz8QMcDy8gMRAywvPxAxwPLyAxEDLN80
        zeGMj4Fxz3fe6Jcic2Cmol+KzIGZin4pMgdmKnr/o/AJF4iBt3ovsgeMqt6L7AGjqvcie8Co6r3IHjCq
        ei+yB4yq3ovsAaOq9yJ7wKjqR9c0zcGMj8MTJ3j5gXhuYXj5gXhuYXj5gXhuYXi5PybGt7z8QMQAy8sP
        RAywvPxAxADLyw9EDLC8/EDEAMvLD0QMsLz8QMQAyzdNczjjY2Dc8503+qXIHJip6Jcic2Cmol+KzIGZ
        it7/KHzCBWLgrd6L7AGjqvcie8Co6r3IHjCqei+yB4yq3ovsAaOq9+LykgONf+W9+F8DjP/jf37+ANrm
        CBAxEFQ9AAAAAElFTkSuQmCC
</value>
  </data>
</root>